name: E2e test workflow

on:
  pull_request:
  push:
  workflow_dispatch:

jobs:
  kind:
    strategy:
      fail-fast: false
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: generate tools version
        run: |
          mkdir tests
          cd tests
          echo 'helm 3.7.2' > .tool-versions
          echo '' > example.yaml

      - name: setup helm
        uses: pixelfederation/gh-action-asdf/install@v2.1.0
        with:
          directory: tests

      - name: check helm
        working-directory: tests
        run: |
          which helm
          helm version
          helm repo add nginx-stable https://helm.nginx.com/stable
          helm repo add bitnami https://charts.bitnami.com/bitnami

      - uses: helm/kind-action@v1.3.0

      - name: Check cluster
        run: |
          kubectl cluster-info
          kubectl get pods -n kube-system
          echo "current-context:" $(kubectl config current-context)
          kubectl config view --raw > ./tests/.kubeconfig

      - name: Helm upgrade nginx
        id: helm-upgrade-nginx
        uses: pixelfederation/gh-action-helm/upgrade@main
        with:
          directory: tests
          namespace: default
          release: nginx-deploy
          chart: nginx-stable/nginx-ingress
          version: 0.13.2
          wait: false
          dryrun: false
          atomic: false
          kubeconfig: .kubeconfig
          files: |
            example.yaml
          set: |
            buildLabels.foo | bar

      - name: Helm upgrade foo
        id: helm-upgrade-foo
        uses: pixelfederation/gh-action-helm/upgrade@main
        with:
          directory: tests
          namespace: default
          release: nginx-foo-release
          chart: bitnami/wordpress
          version: 15.0.5
          wait: false
          dryrun: false
          atomic: false
          kubeconfig: .kubeconfig

      - name: Print kubectl deploy
        run: |
          sleep 10
          kubectl -n default get deploy
          kubectl -n default get pods

      - name: Print helm deploy
        working-directory: tests
        run: |
          helm -n default list

      - name: Helm clenup
        id: helm-cleanup
        uses: pixelfederation/gh-action-helm/cleanup@main
        with:
          directory: tests
          kubeconfig: .kubeconfig
          namespace: default
          regexp: "^(nginx).*"
          excludes: |
            .*bla.*
            .*foo.*

      - name: Print helm deploy after cleanup
        working-directory: tests
        run: |
          helm -n default list
          kubectl -n default get deploy
          kubectl -n default get pods
